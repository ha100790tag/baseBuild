html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

audio, canvas, progress, video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden], template {
  display: none; }

a {
  background-color: transparent; }

a:active, a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b, strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

mark {
  background: #ff0;
  color: #000; }

h1, h2, h3, h4, h5, h6 {
  margin: 0; }

h1 {
  font-weight: 800;
  text-transform: uppercase; }
  @media screen and (min-width: 992px) {
    h1 {
      font-size: 60px; } }

h2 {
  text-transform: uppercase; }

h3 {
  font-weight: 500; }

p {
  margin: 0 0 10px; }

small {
  font-size: 80%; }

sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0;
  display: inline-block;
  vertical-align: top;
  max-width: 100%;
  height: auto; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 1em 40px; }

hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

button, input, optgroup, select, textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

button {
  overflow: visible; }

button, select {
  text-transform: none; }

button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled], html input[disabled] {
  cursor: default; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"], input[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield;
  -webkit-box-sizing: content-box;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

ul, ol {
  margin: 0;
  padding-left: 15px; }

blockquote {
  margin: 0 0 20px;
  text-align: center; }

q:before, q:after {
  display: none; }

.andrew-button {
  -webkit-appearance: none !important;
  -moz-appearance: none !important;
  appearance: none !important;
  background-color: red; }

.error-text {
  opacity: 0;
  visibility: hidden;
  position: absolute;
  top: calc(100% + 5px);
  left: 0;
  background-color: #dc3545;
  color: #fff;
  -webkit-transition: .3s visibility, .3s opacity;
  transition: .3s visibility, .3s opacity;
  padding: 5px 10px;
  border-radius: 0.25rem; }
  .error-text:before {
    content: "";
    position: absolute;
    bottom: 100%;
    border-width: 0 5px 5px 5px;
    border-style: solid;
    border-color: transparent transparent #dc3545 transparent; }
  @media (min-width: 768px) {
    .error-text {
      left: 15px; } }

.subscribe-form {
  padding: 30px 0; }
  @media (min-width: 768px) {
    .subscribe-form > * {
      float: left;
      padding: 0 15px; } }
  .subscribe-form .input-holder {
    position: relative;
    margin-bottom: 20px; }
    .subscribe-form .input-holder .form-control:invalid + .error-text {
      visibility: visible;
      opacity: 1; }
    @media (min-width: 768px) {
      .subscribe-form .input-holder {
        width: calc(100% - 150px); } }
  .subscribe-form .submit-holder .btn {
    width: 100%; }
    @media (min-width: 768px) {
      .subscribe-form .submit-holder .btn {
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden; } }
  @media (min-width: 768px) {
    .subscribe-form .submit-holder {
      width: 150px; } }
  @media (min-width: 768px) {
    .subscribe-form:after {
      content: '';
      clear: both;
      display: table; } }
  @media (min-width: 768px) {
    .subscribe-form {
      margin: 0 -15px; } }

@media (min-width: 992px) {
  .container.narrow-container {
    max-width: 800px; } }

.slick-slide {
  border-style: dashed;
  border-color: red; }
  .slick-slide img {
    -webkit-filter: invert(1);
    filter: invert(1); }

.intro-block {
  min-height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative; }
  .intro-block:before {
    position: absolute;
    content: '';
    z-index: 1;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(ellipse at center, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.01) 1%, rgba(0, 0, 0, 0.39) 63%, black 100%); }

.img-shadowed {
  -webkit-filter: drop-shadow(0 0 3px rgba(100, 0, 0, 0.5));
  filter: drop-shadow(0 0 3px rgba(100, 0, 0, 0.5)); }

.btn {
  -webkit-transition: color 2s linear 0s, background-color 2s linear 2s, border-color 2s linear 4s;
  transition: color 2s linear 0s, background-color 2s linear 2s, border-color 2s linear 4s; }
  .btn:hover {
    color: yellow !important;
    border-color: red !important;
    background-color: green !important; }

.custom-btn {
  -webkit-transition: border-top-color 0.1s linear 0s, border-right-color 0.1s linear .1s, border-bottom-color 0.1s linear .2s, border-left-color 0.1s linear .3s;
  transition: border-top-color 0.1s linear 0s, border-right-color 0.1s linear .1s, border-bottom-color 0.1s linear .2s, border-left-color 0.1s linear .3s;
  border-radius: 20px;
  min-width: 100px;
  max-height: 50px;
  background-color: transparent;
  border: 3px solid black;
  margin: 50px; }
  .custom-btn:hover {
    border-color: red; }

.snow-container {
  min-height: 500px;
  position: relative; }

.snow-drop {
  position: absolute;
  width: 20px;
  height: 20px;
  -webkit-animation-iteration-count: infinite !important;
  animation-iteration-count: infinite !important; }
  .snow-drop:nth-child(1) {
    -webkit-animation: snow1 4s;
    animation: snow1 4s; }
  .snow-drop:nth-child(2) {
    -webkit-animation: snow2 6s;
    animation: snow2 6s; }
  .snow-drop:nth-child(3) {
    -webkit-animation: snow3 10s;
    animation: snow3 10s; }

.drop-part {
  -webkit-transform-origin: center;
  transform-origin: center;
  width: 2px;
  height: 100%;
  background-color: green;
  display: block;
  position: absolute;
  -webkit-animation: bg 4s linear 0s infinite;
  animation: bg 4s linear 0s infinite; }
  .drop-part:nth-child(1) {
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg);
    animation-direction: reverse; }
  .drop-part:nth-child(2) {
    -webkit-transform: rotate(-45deg);
    transform: rotate(-45deg);
    -webkit-animation-delay: .5s;
    animation-delay: .5s; }
  .drop-part:nth-child(3) {
    -webkit-transform: translateX(-1px);
    transform: translateX(-1px); }

@-webkit-keyframes bg {
  0% {
    background-color: blue; }
  20% {
    background-color: red; }
  45% {
    background-color: yellow; }
  65% {
    background-color: purple; }
  85% {
    background-color: aqua; }
  100% {
    background-color: black; } }

@keyframes bg {
  0% {
    background-color: blue; }
  20% {
    background-color: red; }
  45% {
    background-color: yellow; }
  65% {
    background-color: purple; }
  85% {
    background-color: aqua; }
  100% {
    background-color: black; } }

@-webkit-keyframes snow1 {
  0% {
    left: 36%;
    top: 0;
    opacity: 0;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  15% {
    opacity: 1; }
  20% {
    top: 25%;
    left: 36%;
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg); }
  60% {
    top: 70%;
    left: 26%;
    -webkit-transform: rotate(160deg);
    transform: rotate(160deg); }
  85% {
    opacity: 1; }
  100% {
    top: 100%;
    left: 10%;
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
    opacity: 0; } }

@keyframes snow1 {
  0% {
    left: 36%;
    top: 0;
    opacity: 0;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  15% {
    opacity: 1; }
  20% {
    top: 25%;
    left: 36%;
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg); }
  60% {
    top: 70%;
    left: 26%;
    -webkit-transform: rotate(160deg);
    transform: rotate(160deg); }
  85% {
    opacity: 1; }
  100% {
    top: 100%;
    left: 10%;
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
    opacity: 0; } }

@-webkit-keyframes snow2 {
  0% {
    right: 36%;
    top: 0;
    opacity: 0;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  15% {
    opacity: 1;
    -webkit-transform: rotate(20deg);
    transform: rotate(20deg); }
  23% {
    top: 25%;
    right: 56%;
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg); }
  58% {
    top: 70%;
    right: 15%;
    -webkit-transform: rotate(160deg);
    transform: rotate(160deg); }
  85% {
    opacity: 1; }
  100% {
    top: 100%;
    right: 27%;
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
    opacity: 0; } }

@keyframes snow2 {
  0% {
    right: 36%;
    top: 0;
    opacity: 0;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  15% {
    opacity: 1;
    -webkit-transform: rotate(20deg);
    transform: rotate(20deg); }
  23% {
    top: 25%;
    right: 56%;
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg); }
  58% {
    top: 70%;
    right: 15%;
    -webkit-transform: rotate(160deg);
    transform: rotate(160deg); }
  85% {
    opacity: 1; }
  100% {
    top: 100%;
    right: 27%;
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
    opacity: 0; } }

@-webkit-keyframes snow3 {
  0% {
    top: 0;
    right: 15%;
    opacity: 0;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  20% {
    top: 20%;
    right: 20%;
    opacity: 1;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  40% {
    top: 40%;
    right: 15%;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  60% {
    top: 60%;
    right: 20%;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  80% {
    top: 80%;
    right: 25%;
    opacity: 1;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  100% {
    top: 100%;
    right: 20%;
    opacity: 0;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); } }

@keyframes snow3 {
  0% {
    top: 0;
    right: 15%;
    opacity: 0;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  20% {
    top: 20%;
    right: 20%;
    opacity: 1;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  40% {
    top: 40%;
    right: 15%;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  60% {
    top: 60%;
    right: 20%;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  80% {
    top: 80%;
    right: 25%;
    opacity: 1;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  100% {
    top: 100%;
    right: 20%;
    opacity: 0;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); } }

.transform-block {
  background: red;
  height: 100px;
  -webkit-transform: skew(1deg, 1deg);
  transform: skew(1deg, 1deg);
  border-color: yellow green blue aqua;
  border-width: 4px;
  border-style: solid; }

.cube-container {
  min-height: 800px;
  position: relative;
  -webkit-perspective: 200px;
  perspective: 200px;
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d; }

.cube {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 150px;
  height: 150px;
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
  -webkit-animation: cube 6s linear 0s infinite;
  animation: cube 6s linear 0s infinite; }

.cube-part {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  opacity: .7;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-size: 40px; }
  .cube-part:nth-child(1) {
    background-color: red; }
  .cube-part:nth-child(2) {
    background-color: green;
    -webkit-transform-origin: right center;
    transform-origin: right center;
    -webkit-transform: translateX(-100%) rotateY(-90deg);
    transform: translateX(-100%) rotateY(-90deg); }
  .cube-part:nth-child(3) {
    background-color: black;
    -webkit-transform-origin: left center;
    transform-origin: left center;
    -webkit-transform: translateX(100%) rotateY(90deg);
    transform: translateX(100%) rotateY(90deg); }
  .cube-part:nth-child(4) {
    background-color: yellow;
    -webkit-transform-origin: center bottom;
    transform-origin: center bottom;
    -webkit-transform: translateY(-100%) rotateX(90deg);
    transform: translateY(-100%) rotateX(90deg); }
  .cube-part:nth-child(5) {
    background-color: aqua;
    -webkit-transform-origin: center top;
    transform-origin: center top;
    -webkit-transform: translateY(100%) rotateX(-90deg);
    transform: translateY(100%) rotateX(-90deg); }
  .cube-part:nth-child(6) {
    background-color: gray;
    -webkit-transform: translate3d(0, 0, -150px) scaleZ(-1);
    transform: translate3d(0, 0, -150px) scaleZ(-1); }

@-webkit-keyframes cube {
  from {
    -webkit-transform: rotate3d(1, 1, 1, 0deg) translate(-50%, -50%);
    transform: rotate3d(1, 1, 1, 0deg) translate(-50%, -50%); }
  to {
    -webkit-transform: rotate3d(1, 1, 1, 360deg) translate(-50%, -50%);
    transform: rotate3d(1, 1, 1, 360deg) translate(-50%, -50%); } }

@keyframes cube {
  from {
    -webkit-transform: rotate3d(1, 1, 1, 0deg) translate(-50%, -50%);
    transform: rotate3d(1, 1, 1, 0deg) translate(-50%, -50%); }
  to {
    -webkit-transform: rotate3d(1, 1, 1, 360deg) translate(-50%, -50%);
    transform: rotate3d(1, 1, 1, 360deg) translate(-50%, -50%); } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
